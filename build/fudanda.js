(()=>{"use strict";var r=void 0;function t(r,t){(null==t||t>r.length)&&(t=r.length);for(var n=0,e=new Array(t);n<t;n++)e[n]=r[n];return e}var n={base:{getTypeOf:function(r){return Object.prototype.toString.call(r).match(/\[\w+\W(\w+)\]$/)[1]},unique:function(n){if("Array"===r.getTypeOf(n))return function(r){return function(r){if(Array.isArray(r))return t(r)}(r)||function(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||function(r,n){if(r){if("string"==typeof r)return t(r,n);var e=Object.prototype.toString.call(r).slice(8,-1);return"Object"===e&&r.constructor&&(e=r.constructor.name),"Map"===e||"Set"===e?Array.from(r):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?t(r,n):void 0}}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(new Set(arr));if("String"===r.getTypeOf(n)){for(var e={},o="",a=0,i=n.length;a<i;a++)e[n[a]]&&(o+=n[a],e[n[a]]=!0);return o}}}};window.fudanda=n})();